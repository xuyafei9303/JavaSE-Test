网络相关：
    OSI七层网络模型
        应用层                 访问网络的服务接口：Telnet、FTP、HTTP、SNMP、DNS
        表示层                 数据格式转换和表示：数据加解密、数据编解码、数据压缩和解压
        会话层                 建立连接并访问验证和会话管理：登陆验证、断点续传、数据粘包分包
        传输层                 定义了传输数据的协议和端口号：TCP、UDP
        网络层                 IP地址的封装和解析，路由器、交换机、防火墙
        数据链路层              MAC地址解析和封装，数据帧：网卡、网桥、交换机
        物理层                 定义物理设备标准，比特流：数模转换和模数转换

    TCP/IP四层网络模型
        TCP/IP不是指TCP和IP这两个协议的合称，而是指因特网的整个TCP/IP协议族
        应用层                 服务及应用程序：Telnet、FTP、HTTP、SNMP、DNS
        传输层                 确认数据传输及错误处理：TCP、UDP
        网络层                 服务数据的传输、路由及地址的选择：IP、ARP地址解析协议
        网络接口层              定义物理网络连接的通信协议：Ethernet、FDDI、ATM

    TCP三次握手/四次挥手
        TCP数据遭传输之前首先需要建立连接，建立连接需要三次通信，一般称为三次挥手，断开连接要进行四次通信，一般称为四次挥手

        TCP的数据包结构：
        - 源端口号 16位           和源主机的IP地址一起标识源主机的一个应用进程
        - 目的端口号 16位          和源主机的IP地址一起标识目的主机的一个应用进程
        - 顺序号seq 32位          标识从TCP源端向TCP目的端发送的数据字节流，表示这个报文段中的第一个数据字节的顺序号。TCP用顺序号对每个字节进行计数，序号是32bit的无符号数，序列号达到2的32次方 - 1，
                                就又从0开始。在建立一个新的连接的时候，SYN标志为1，顺序号字段包含由这个主机选择的该连接的初始顺序号ISN（Initial Sequence Number）
        - 确认号ack 32位          存储发送确认的一端所期望收到的下一个顺序号。确认序列号是上次已成功收到的数据字节顺序号+1.只有ACK标志位为1时确认顺序号字段才有效。TCP为应用层提供全双工服务，这意味着数据
                                能在两个方向上独立进行传输。因此，连接的每一端都必须保持每个方向上的传输数据顺序号
        - TCP报头长度 4位         存储报头中头部数据的长度，他指明了数据从哪里开始。需要这个值是因为任选字段的长度是可变的，该字段占4个字节，因此TCP最多有60字节的首部，但没有任选字段，正常的长度是20字节
        - 保留位 6位              数据保留位，目前必须被设置为0
        - 控制位 6位              （control flags）在TCP报头中有6个标志比特，他们中的多个可被同时设置为1
            关于控制位的说明
            1           URG         为1时表示紧急指针有效，为0时忽略紧急指针的值
            2           ACK         为1时表示确认号有效，为0时表示在报文中不包含确认信息，忽略确认号字段
            3           PSH         为1表示带有PSH标志的数据，表示接收方应该尽快将这个报文段交给应用层，而不用等待缓冲区装满
            4           RST         用于复位由于主机崩溃或其他原因而出错的连接，还可以拒绝非法的报文段和拒绝连接请求。一般情况下，如果收到一个RST为1的报文，那么一定发生了某种问题
            5           SYN         同步序号，为1表示连接请求，用于建立连接和使顺序号同步
            6           FIN         用于释放连接，为1时代表发送方已经没有数据要送达了，即关闭本方数据流
        - 窗口大小 16位          数据字节数，表示从确认号开始，本报文的源方可以接收的字节数，即源方接收窗口的大小。窗口大小是16bit的字段，因而窗口最大为65535字节
        - 校验和 16位            此校验和是对整个的TCP报文段，包括TCP头部和TCP数据，以16位字符计算所得。是一个强制性字段，一定是由发送端计算和存储的，并由接收端验证
        - 紧急指针 16位          只有在URG标志置为1时紧急指针才有效，这时告诉TCP该条数据需要紧急发送
        - 选项                  最常见的可选字段是最长报文大小，又叫做MSS（Maximum Segment Size）。每个连接方通常都在通信的第一个报文段（未建立连接而设置SYN标志的那个段）
                                中指明这个选项，表明该TCP连接能接收的最大长度的报文段。选项长度不一定是32字节的整数，因此需要填充位，使得报头长度为整数字段
        - 数据                  TCP报文中的数据部分是可选的。在一个连接建立和连接终止时，双方交换的报文段仅有TCP首部。如果一方没有数据要发送，则也使用没有任何数据的首部确认收到的数据。在处理超时的许多情况也会发送不带数据的报文段

    TCP三次握手的过程：
        1.客户端发送SYN（seq=x）报文给服务器端，进入SYN_SEND状态
        2.服务器端收到SYN报文，回应一个SYN（seq=y）和ACK（ack=x+1）报文，进入SYN_RECV状态
        3.客户端收到服务器端的SYN报文，回应一个ACK（ack=y+1）报文，进入Established状态
        至此，TCP客户端和服务器端成功建立连接，可以开始传输数据了。

    TCP中的四次挥手：
        TCP在连接的时候要进行三次握手，但是在断开连接的时候要进行四次挥手，这是由于TCP的半关闭造成的。因为TCP连接是全双工的（即数据可在两个方向上独立传输），所以在进行关闭时对每个方向
        都要进行关闭，这种单方向的关闭叫做半关闭。在一方完成他的数据发送任务时，就发送一个FIN来向另一方通告将要终止这个方向的连接。
        TCP断开连接既可以是由客户端发起，也可以是服务器端发起：如果由客户端发起断开连接操作，则称客户端主动断开连接；如果由服务器端发起断开连接操作，则称服务器端主动断开连接
        四次挥手的过程：
            1.客户端应用进程调用断开连接的请求，向服务器端发送一个终止标志位FIN=1，seq=u的消息，表示在客户端关闭链路前要发送的数据以及发送完毕，可以开始关闭链路操作，并请求服务器端确认客户端关闭客户端到服务器的链路操作，此时客户端处于FIN-WAIT-1状态
            2.服务器在收到这个FIN消息后返回一个ACK=1,ack=u+1，seq=v的消息给客户端，表示接收到客户端断开链路的操作请求，这时TCP服务器进程通知高层应用进程释放客户端到服务器端的链路，服务器处于CLOSE-WAIT状态，即半关闭状态。客户端收到消息后处于FIN-WAIT-2状态
            3.服务器端在关闭链路前将需要发送给客户端的消息发送给客户端，等待该数据发送完成后，发送一个终止标志位FIN=1,ACK=1,seq=w,ack=u+1的消息给客户端，表示关闭链路钱服务器需要向客户端发送的消息已经发生完毕，
                请求客户端确认关闭从服务器到客户端的链路操作，此时服务器端处于LAST-ACK的状态，等待客户端最终断开链路
            4.客户端在接受到这个最终FIN消息后，发送一个ACK=1，seq=u+1，ack=w+1的消息给服务器端，表示接受到服务器端的断开连接请求并准备断开服务器端到客户端的链路。此时客户端处于TIM-WAIT状态，TCP连接还没有释放，然后经过等待计时（2MSL）设置的超时时间后，客户端进入CLOSE状态




